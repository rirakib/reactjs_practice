#React Fundamentals
    What is React? Why use it?
    Setting up the environment (Node.js, npm, Vite or Create React App)
    JSX syntax and rules
    Functional Components
    Props and children
    State with useState
    Event handling
    Conditional rendering

#Component Architecture
    Component structure and file naming
    Props drilling vs composition
    Controlled vs uncontrolled components
    Lists and keys
    Forms and handling input

#React Hooks Deep Dive
    useEffect (side effects, cleanup)
    useState (in-depth)
    useRef (DOM refs, persist values)
    useMemo and useCallback (optimization basics)

#React Router
    Installing and configuring react-router-dom
    BrowserRouter, Routes, and Route
    Navigating with Link and useNavigate
    Route parameters and useParams
    Nested routes and layout routes

#State Management
    Lifting state up
    Prop drilling issues
    useContext (basic global state)
    When to use third-party state libraries (Redux, Zustand â€” optional for now)

#API Handling and Data Fetching
    Fetching data using fetch and axios
    Error handling
    Loading states
    useEffect with async
    Basic caching using local state or useEffect

#Performance & Optimization
    Component re-rendering
    React.memo
    useMemo, useCallback (again with practical use)
    Lazy loading components (React.lazy, Suspense)
    Splitting code

#Testing & Deployment
    Intro to testing with React Testing Library and Jest
    Writing tests for components and events
    Hosting options: Netlify, Vercel, GitHub Pages
    Environment variables and production build